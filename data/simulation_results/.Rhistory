# comparing different methods
library("ggplot2")
library("readxl")
data = read_excel("/Users/daixinming/Documents/University/2021 Spring/Gamma Thesis/Gamma Thesis Code/Results/Final.xlsx",
sheet = "plot1")
data$group = as.factor(data$group)
p1 = ggplot(data, aes(x = nratio, y = cp, group = group, colour=group))+
geom_line()+
geom_point()+
scale_colour_hue(name = "Methods")+      # Set legend title
xlab("Sample size") + ylab("Coverage probailities") + # Set axis labels
ggtitle("Plot of coverage probailities by sample size") +
theme(panel.background = element_rect(fill = "white"),
panel.grid = element_line(color = "grey80", size = 0.2),
panel.border = element_rect(color = "grey80", fill = NA))
p2 = ggplot(data, aes(x = nratio, y = al, group = group, colour=group))+
geom_line()+
geom_point()+
scale_colour_hue(name = "Methods")+      # Set legend title
xlab("Sample size") + ylab("Average lengths") + # Set axis labels
ggtitle("Plot of average lengths by sample size") +
theme(panel.background = element_rect(fill = "white"),
panel.grid = element_line(color = "grey80", size = 0.2),
panel.border = element_rect(color = "grey80", fill = NA))
#============================================================
data2 = read_excel("/Users/daixinming/Documents/University/2021 Spring/Gamma Thesis/Gamma Thesis Code/Results/Final.xlsx",
sheet = "plot2")
p3= ggplot(data2, aes(x = dratio, y = cp, group = group, colour=group))+
geom_line()+
geom_point()+
scale_colour_hue(name = "Methods")+      # Set legend title
xlab("Probabilities of zero values") + ylab("Coverage probailities") + # Set axis labels
ggtitle("Plot of coverage probailities by probabilities of zero values") +
theme(panel.background = element_rect(fill = "white"),
panel.grid = element_line(color = "grey80", size = 0.2),
panel.border = element_rect(color = "grey80", fill = NA))
p4 = ggplot(data2, aes(x = dratio, y = al, group = group, colour=group))+
geom_line()+
geom_point()+
scale_colour_hue(name = "Methods")+      # Set legend title
xlab("Probabilities of zero values") + ylab("Average lengths") + # Set axis labels
ggtitle("Plot of average lengths by probabilities of zero values") +
theme(panel.background = element_rect(fill = "white"),
panel.grid = element_line(color = "grey80", size = 0.2),
panel.border = element_rect(color = "grey80", fill = NA))
library("cowplot")
plot_grid(p1, p2, p3, p4,
ncol = 2, nrow = 2)
plot_grid(p1, p2, p3, p4,
ncol = 2, nrow = 2, labels = c("A", "B"))
plot_grid(p1, p2, p3, p4,
ncol = 2, nrow = 2, labels = c("A", "B", "C", "D"))
# to gamma distribution test
# The sample size is 132.
library("readxl")
library("goft")
library("ggplot2")
# Beijing
B = read_excel("/Users/daixinming/Documents/University/2021 Spring/Gamma Thesis/data/Precipitation.xlsx",
sheet = "Beijing")
B = B[, -1]
Beijing = c()
for(i in 1:dim(B)[1]){
Beijing = c(Beijing, unlist(B[i,]))
}
names(Beijing) = NULL
# Density plot of data
B = data.frame(Beijing = Beijing)
ggplot(B,aes(x=Beijing))+geom_density()
# data processing function, which transfers data into standard form.
zig = function(data){
data0 = data[data == 0]
data1 = data[data != 0]
ni0 = length(data0)
ni1 = length(data1)
return(list(ni0 = ni0, ni1 = ni1, zigdata = data, zigdata1 = data1))
}
Beijing = zig(Beijing)
# estimation
delta1 = Beijing$ni0/132
e1 = gamma_fit(Beijing$zigdata1)
hb = hist(Beijing1)
# ks.test(Beijing1, "pgamma", 0.67)
# gamma_fit(Beijing1)
gamma_test(Beijing1)
# p-value = 0.9726
# it seems that the lognormal model is more suitable.
fit1 = glm(hb$counts~hb$breaks[-8], family = Gamma)
fit2 = glm(hb$counts~hb$breaks[-8], family=gaussian(link="log"))
AIC(fit1)
AIC(fit2)
# plot data and gamma
library("ggplot2")
gamma_fit(Beijing1)
gamma = rgamma(1000, shape = 0.6787571, scale = 83.7041872)
mydata = data.frame(gamma = gamma)
ggplot(mydata, aes(x = gamma))+
geom_histogram(aes(y =..density..),
colour = "black",
fill = "white") +
stat_function(fun = dgamma, bins = 10, args = list(shape = 0.6787571, scale = 83.7041872))
ggplot(data = dat) +
geom_histogram(data = as.data.frame(x), aes(x=x, y=..density..)) +
geom_line(aes(x=dat$x, y=dgamma(dat$x,fit.params$estimate["shape"], fit.params$estimate["rate"])), color="red", size = 1) +
theme_classic()
#Zhengzhou===========================================
Z = read_excel("/Users/daixinming/Documents/University/2021 Spring/Gamma Thesis/data/Precipitation.xlsx",
sheet = "Zhengzhou")
Z = Z[, -1]
Zhengzhou = c()
for(i in 1:dim(Z)[1]){
Zhengzhou = c(Zhengzhou, unlist(Z[i,]))
}
names(Zhengzhou) = NULL
# Density plot of data
myData = data.frame(Precipitation = c(Beijing, Zhengzhou), Location = as.factor(c(rep("Beijing", length(Beijing)),rep("Zhengzhou", length(Zhengzhou)))))
ggplot(myData,aes(x = Precipitation, group = Location, colour = Location))+
geom_density()+
scale_colour_hue(name = "Methods")+
ggtitle("Density plot of Beijing and Zhengzhou precipitation data")+
scale_colour_brewer(palette = "Set1")+
ylab("Density")+
theme(panel.background = element_rect(fill = "white"),
panel.grid = element_line(color = "grey80", size = 0.2),
panel.border = element_rect(color = "grey80", fill = NA))
# Zig(Zhengzhou)
Zhengzhou = zig(Zhengzhou)
# estimation
delta2 = Zhengzhou$ni0/132
e2 = gamma_fit(Zhengzhou$zigdata1)
hz = hist(Zhengzhou1)
gamma_test(Zhengzhou1)
# p-value = 0.4429
# it seems that the lognormal model is more suitable.
fit1 = glm(hz$counts~hz$breaks[-7], family = Gamma)
fit2 = glm(hz$counts~hz$breaks[-7], family=gaussian(link="log"))
AIC(fit1)
AIC(fit2)
#===============
sqrt(1/((1-delta1)*e1[1]))-sqrt(1/((1-delta2)*e2[1]))
zigamma1 = Beijing
zigamma2 = Zhengzhou
alpha = 0.05
dci1 = ci.pb(zigamma1, zigamma2, nr = 1000, alpha)
dci2 = ci.f(zigamma1,zigamma2,nr=10000,alpha=alpha)
dci3 = ci.mover1(zigamma1, zigamma2, alpha)
dci4 = ci.mover2(zigamma1, zigamma2, alpha)
myData = data.frame(Precipitation = c(Beijing, Zhengzhou), Location = as.factor(c(rep("Beijing", length(Beijing)),rep("Zhengzhou", length(Zhengzhou)))))
ggplot(myData,aes(x = Precipitation, group = Location, colour = Location))+
geom_density()+
scale_colour_hue(name = "Methods")+
ggtitle("Density plot of Beijing and Zhengzhou precipitation data")+
scale_colour_brewer(palette = "Set1")+
ylab("Density")+
theme(panel.background = element_rect(fill = "white"),
panel.grid = element_line(color = "grey80", size = 0.2),
panel.border = element_rect(color = "grey80", fill = NA))
myData = data.frame(Precipitation = c(Beijing, Zhengzhou), Location = as.factor(c(rep("Beijing", length(Beijing)),rep("Zhengzhou", length(Zhengzhou)))))
Location = as.factor(c(rep("Beijing", length(Beijing)),rep("Zhengzhou", length(Zhengzhou))))
length(Location)
Location
length(Beijing)
B = read_excel("/Users/daixinming/Documents/University/2021 Spring/Gamma Thesis/data/Precipitation.xlsx",
sheet = "Beijing")
B = B[, -1]
Beijing = c()
for(i in 1:dim(B)[1]){
Beijing = c(Beijing, unlist(B[i,]))
}
names(Beijing) =
Beijing
Beijing
Z = read_excel("/Users/daixinming/Documents/University/2021 Spring/Gamma Thesis/data/Precipitation.xlsx",
sheet = "Zhengzhou")
Z = Z[, -1]
Zhengzhou = c()
for(i in 1:dim(Z)[1]){
Zhengzhou = c(Zhengzhou, unlist(Z[i,]))
}
names(Zhengzhou) = NULL
myData = data.frame(Precipitation = c(Beijing, Zhengzhou), Location = as.factor(c(rep("Beijing", length(Beijing)),rep("Zhengzhou", length(Zhengzhou)))))
length(Location)
Zhengzhou
myData = data.frame(Precipitation = c(Beijing, Zhengzhou), Location = as.factor(c(rep("Beijing", length(Beijing)),rep("Zhengzhou", length(Zhengzhou)))))
ggplot(myData,aes(x = Precipitation, group = Location, colour = Location))+
geom_density()+
scale_colour_hue(name = "Methods")+
ggtitle("Density plot of Beijing and Zhengzhou precipitation data")+
scale_colour_brewer(palette = "Set1")+
ylab("Density")+
theme(panel.background = element_rect(fill = "white"),
panel.grid = element_line(color = "grey80", size = 0.2),
panel.border = element_rect(color = "grey80", fill = NA))
